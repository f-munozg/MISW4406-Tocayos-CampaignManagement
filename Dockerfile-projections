FROM python:3.11-slim

WORKDIR /app

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copiar requirements y instalar dependencias de Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código fuente
COPY src/ ./src/

# Crear directorio para logs
RUN mkdir -p /app/logs

# Configurar PYTHONPATH para que Python pueda encontrar los módulos
ENV PYTHONPATH=/app/src

# Exponer puerto
EXPOSE 5000

# Comando para el projection consumer
CMD ["bash", "-lc", "python - <<'PY'\nimport logging\nimport time\nimport sys\nfrom campaign_management.main import create_app\nfrom campaign_management.infraestructura.outbox.event_consumer_service import event_consumer_service\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\napp = create_app()\nwith app.app_context():\n    logger.info(\"Starting projection consumer...\")\n    try:\n        event_consumer_service.start_consuming()\n        logger.info(\"Projection consumer started successfully\")\n        \n        # Keep the container running\n        while True:\n            time.sleep(60)  # Sleep for 1 minute\n            if not event_consumer_service.running:\n                logger.warning(\"Consumer stopped, attempting to restart...\")\n                try:\n                    event_consumer_service.start_consuming()\n                    logger.info(\"Consumer restarted successfully\")\n                except Exception as e:\n                    logger.error(f\"Failed to restart consumer: {e}\")\n                    time.sleep(30)  # Wait 30 seconds before retry\n                    \n    except Exception as e:\n        logger.error(f\"Failed to start projection consumer: {e}\")\n        logger.error(\"Container will continue running for debugging...\")\n        # Keep container alive for debugging\n        while True:\n            time.sleep(60)\nPY"]
